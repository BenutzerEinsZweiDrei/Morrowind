// Generated by CoffeeScript 1.9.1
(function() {
  var mw, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  mw = root.mw = {
    gots: 0,
    gets: 2 + 31,
    world: null,
    circle: [
      {
        x: 1,
        y: -1
      }, {
        x: 0,
        y: -1
      }, {
        x: -1,
        y: -1
      }, {
        x: 1,
        y: 0
      }, {
        x: 0,
        y: 0
      }, {
        x: -1,
        y: 0
      }, {
        x: 1,
        y: 1
      }, {
        x: 0,
        y: 1
      }, {
        x: -1,
        y: 1
      }
    ],
    waters: []
  };

  $(document).ready(function() {
    $.ajaxSetup({
      'async': false
    });
    mw.boot.call(mw);
    mw.resources.call(mw);
    return true;
  });

  mw.resources = function() {
    var go, i, j;
    this.vvardenfell = new Image(2688, 2816);
    this.vvardenfell.src = 'vvardenfell.bmp';
    this.vclr = new Image(2688, 2816);
    this.vclr.src = 'vvardenfell-vclr.bmp';
    for (i = j = 0; j <= 31; i = ++j) {
      go = function() {
        var loader, n;
        loader = new THREE.TGALoader;
        n = i < 10 ? "0" + i : i;
        return loader.load("models/water" + n + ".tga", function(asd) {
          asd.wrapS = asd.wrapT = THREE.RepeatWrapping;
          asd.repeat.set(64, 64);
          mw.waters[parseInt(n)] = asd;
          console.log("got " + n);
          return mw.got.call(mw);
        });
      };
      go();
    }
    this.vclr.onload = this.vvardenfell.onload = this.vclr.onload = function() {
      return mw.got.call(mw);
    };
    return true;
  };

  mw.got = function() {
    if (++this.gots === this.gets) {
      this.after();
    }
    return true;
  };

  mw.after = function() {
    $.getJSON("seydaneen.json", function(data) {
      return mw.world = new mw.World(data);
    });
    mw.animate();
    return true;
  };

}).call(this);
