// Generated by CoffeeScript 1.9.1
(function() {
  mw.Heightmap = (function() {
    function Heightmap() {
      var hm;
      this.bmp = new Image(64, 64);
      this.bmp.src = 'cells/-2,-9.bmp';
      hm = this;
      this.bmp.onload = function() {
        return hm.got();
      };
    }

    Heightmap.prototype.got = function() {
      var heights, map, x, y;
      heights = this.heights();
      this.geometry = new THREE.PlaneGeometry(8192 * 2, 8192 * 2, 128, 128);
      map = THREE.ImageUtils.loadTexture('seydaneen.bmp');
      map.magFilter = THREE.NearestFilter;
      map.minFilter = THREE.LinearMipMapLinearFilter;
      this.material = new THREE.MeshBasicMaterial({
        map: map,
        wireframe: true
      });
      this.mesh = new THREE.Mesh(this.geometry, this.material);
      x = (-2 * 8192) + 4096 + 512 + 128;
      y = (-9 * 8192) + 256 + 128;
      this.mesh.position.set(x, y, 200);
      mw.scene.add(this.mesh);
      return true;
    };

    Heightmap.prototype.heights = function() {
      var all, canvas, context, data, i, img, imgd, j, k, l, n, pix, ref, ref1, ref2, size;
      console.log('heights');
      img = this.bmp;
      canvas = document.createElement('canvas');
      canvas.width = 128;
      canvas.height = 128;
      context = canvas.getContext('2d');
      size = 128 * 128;
      data = new Float32Array(size);
      context.drawImage(img, 0, 0);
      for (i = k = ref = i, ref1 = i - size - 1; ref <= ref1 ? k <= ref1 : k >= ref1; i = ref <= ref1 ? ++k : --k) {
        data[i] = 0;
      }
      imgd = context.getImageData(0, 0, 128, 128);
      pix = imgd.data;
      j = 0;
      n = pix.length;
      for (i = l = 0, ref2 = n - 1; l <= ref2; i = l += 4) {
        all = pix[i] + pix[i + 1] + pix[i + 2];
        data[j++] = all / 30;
      }
      return data;
    };

    return Heightmap;

  })();

}).call(this);
